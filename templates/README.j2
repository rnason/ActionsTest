{# Set Example Module Name to use for module call examples #}
{% if var.Config.Readme.Usage.ExampleModuleName is defined -%}
    {% set ExmodName = var.Config.Readme.Usage.ExampleModuleName -%}
{% else -%}
    {% set ExmodName = var.Repo.name|default("example", true) -%}
{% endif %}
{# Set Example Module Namespace to use for module call examples #}
{% if var.Config.Repository.NameSpace is defined -%}
    {% set ExmodNameSpace = var.Config.Repository.NameSpace -%}
{% else -%}
    {% set ExmodNameSpace = var.Repo.owner.login|default("Example-GitHub-User", true) -%}
{% endif %}
{# Set Example Module Repo URL to use for module call examples #}
{% if var.Config.Repository.RepoName is defined -%}
    {% set ExmodRepoURL = "%s/%s"|format(ExmodNameSpace,var.Config.Repository.RepoName) -%}
{% else -%}
    {% set ExmodRepoURL = var.Repo.full_name|default("Example-GitHub-User/Example-Terraform-Module", true) -%}
{% endif %}
{# Set Example Module Version to use for module call examples #}
{% if var.Release.tag_name is defined -%}
    {% set ExmodVersion = var.Release.tag_name -%}
{% else -%}
    {% set ExmodVersion = var.Config.Readme.Version|default("v1.0.0", true) -%}
{% endif %}
{# START OF README TPL #}
<!-- VSCode Markdown Exclusions-->
<!-- markdownlint-disable MD025 Single Title Headers-->
{# TITLE #}
{% if var.Config.Readme.Title is defined %}
# {{ var.Config.Readme.Title }}
{% else %}
# Terraform Module Documentation
{% endif %}

{# OPTIONAL HERO IMAGE #}
{% if var.Config.Readme.HeroImage is defined %}
![Hero]({{ var.Config.Readme.HeroImage }})
{% endif %}

<br>

{# VERSION BADGE #}
![Version-Badge](https://img.shields.io/badge/MODULE%20VERSION-{{ ExmodVersion }}-Green?style=for-the-badge&logo=terraform&logoColor=BLUE&logoWidth=25)

<br>

{# GETTING STARTED #}
# Getting Started

{% if var.Config.Readme.GettingStarted is defined %}
{{ var.Config.Readme.GettingStarted }}
{% elif var.Repo.description %}
{{ var.Repo.description }}
{% else %}
No description has been defined for this project.
{% endif %}
<br><br>

{# PRE-REQS #}
# Module Pre-Requisites and Dependencies

{% if var.Config.Readme.PreRequisites is defined %}
{{ var.Config.Readme.PreRequisites }}
{% else %}
This module does not currently have any pre-requisites or dependency requirements.
{% endif %}
<br><br>

{# DIRECTORY STRUCTURE TREE #}
# Module Directory Structure

```bash
{{ var.Tree }}
```

<br><br>

{# MODULE EXAMPLE #}
# Module Usage

```terraform
module "{{ ExmodName }}" {
    source = "git@github.com:{{ ExmodRepoURL }}?ref={{ ExmodVersion }}"

    // Required Variables
    {% for item in var.TFRequiredVars %}
    {% if item.type != 'map' %}
    {{ item.variable }}{{ "="|indent(var.TFRequiredVars_MaxLength - item.variable|length + 1, True) }} "{{ item.value|default("Example Value", true) }}"
    {% else %}

    {{ item.variable }} = {
        {% for key, value in item.default.items() %}
        {{ key }} = "{{ value }}"
        {% endfor %}
    }
    {% endif %}
    {% endfor %}

    // Optional Variables with module defined default values assigned
    {% for item in var.TFOptionalVars %}
    {% if item.type != 'map' %}
    # {{ item.variable }}{{ "="|indent(var.TFOptionalVars_MaxLength - item.variable|length + 1, True) }} {{ item.default }}
    {% else %}

    # {{ item.variable }} = {
        {% for key, value in item.default.items() %}
    #   {{ key }} = "{{ value }}"
        {% endfor %}
    # }
    {% endif %}
    {% endfor %}
}
```

<br><br>

# Terraform Variables

Module variables that need to either be defined or re-defined with a non-default value can easily be hardcoded inline directly within the module call block or from within the root project that is consuming the module. If using the second approach then the root project must have it's own custom variables defined within the projects `variables.tf` file with set default values or with the values provided from a separate environmental `terraform.tfvar` file. Examples of both approaches can be found below. Note that for the standards used within this documentation, all variables will mostly use the first approach for ease of readability.

<br>

> __NOTE:__ There is also a third way to provide variable values using Terraform data sources. A data source is a unique type of code block used within a project that either instantiates or collects data that can be referenced throughout the project. A data source, for example,  can be declared to read the terraform state file and gather all of the available information from a previously deployed project stack. Any of the data contained within the data source can then be referenced to set the value of a project or module variable.

<br><br>

## Setting Variables Inline

```terraform
module "{{ ExmodName }}" {
    source = "git@github.com:{{ ExmodRepoURL }}?ref={{ ExmodVersion }}"

    // Required Variables
    {% for item in var.TFRequiredVars %}
    {% if item.type != 'map' %}
    {{ item.variable }}{{ "="|indent(var.TFRequiredVars_MaxLength - item.variable|length + 1, True) }} "{{ item.value|default("Example Value", true) }}"
    {% endif %}
    {% endfor %}
}
```

<br><br>

## Setting Variables in a Terraform Root project

<br>

### Terraform Root Project/variables.tf

```terraform
{% for item in var.TFRequiredVars %}
{% if item.type != 'map' %}
variable "{{ item.variable }}" {
    type        = "{{ item.type }}"
    description = "{{ item.description }}"
}
{% endif %}
{% endfor %}
```

<br>

### Terraform Root Project/terraform.tfvars

```terraform
{% for item in var.TFRequiredVars %}
{% if item.type != 'map' %}
{{ item.variable }}{{ "="|indent(var.TFRequiredVars_MaxLength - item.variable|length + 1, True) }} {{ item.value|default("Example Value", true) }}
{% endif %}
{% endfor %}
```

<br>

### Terraform Root Project/main.tf

```terraform
module "{{ ExmodName }}" {
    source = "git@github.com:{{ ExmodRepoURL }}?ref={{ ExmodVersion }}"

    // Required Variables
    {% for item in var.TFRequiredVars %}
    {% if item.type != 'map' %}
    {{ item.variable }}{{ "="|indent(var.TFRequiredVars_MaxLength - item.variable|length + 1, True) }} var.{{ item.variable }}
    {% endif %}
    {% endfor %}
}
```

<br><br>

# Required Variables   <<<<<<<<<<<<<<<<<<<<<---------HERE----------->>>>>>>>>>>>>>>>>>>>>>>

The following required module variables do not contain default values and must be set by the consumer of the module to use the module successfully.

<br><br>

{% for item in var.TFRequiredVars %}
## :red_circle: {{ item.variable }}

<br>

![Required](images/neon_required.png)

<br>

{{ item.description }}

<br><br>

### Declaration in module variables.tf

```terraform
variable "{{ item.variable }}" {
  type        = {{ item.type }}
  description = {{ item.description }}
}
```

<br><br>

### Module usage in project root main.tf <<<<<<<<<<NOT COMPLETED>>>>>>>>>>>>>>>>

```terraform
module "{{ ExmodName }}" {
  source = "git@github.com:{{ ExmodRepoURL }}?ref={{ ExmodVersion }}"

  // Required Variables
  kms_key_alias_name        = "prod/s3"
}
```

<br><br><br>
{% endfor %}
<br><br>

# Optional Variables

The following optional module variables are not required because they already have default values assigned when the variables where defined within the modules `variables.tf` file. If the default values do not need to be changed by the root project consuming the module, then they do not even need to be included in the root project. If any of the variables do need to be changed, then they can be added to the root project in the same way that the required variables were defined and utilized. Optional variables also may alter how the module provisions resources in the cases of encryption or IAM policy generation. A variable could flag an encryption requirement when provisioning an S3 bucket or Dynamo table by providing a KMS CMK, for example. Another use case may be the passage of ARN values to allow users or roles access to services or resources, whereas by default permissions would be more restrictive or only assigned to the account root or a single IAM role. A detailed explanation of each of this modules optional variables can be found below:

<br><br>

{% for item in var.TFOptionalVars %}
## :large_blue_circle: {{ item.variable }}

<br>

![Optional](images/neon_optional.png)

<br>

{{ item.description }}

<br><br>

### Declaration in module variables.tf

```terraform
variable "{{ item.variable }}" {
  type        = {{ item.type }}
  description = {{ item.description }}
  default     = {{ item.default }}
}
```

<br><br>

### Module usage in project root main.tf <<<<<<<<<<NOT COMPLETED>>>>>>>>>>>>>>>>

```terraform
module "{{ ExmodName }}" {
  source = "git@github.com:{{ ExmodRepoURL }}?ref={{ ExmodVersion }}"

  // Required Variables
  kms_key_alias_name        = "prod/s3"
}
```

<br><br><br>
{% endfor %}